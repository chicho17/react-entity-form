{"version":3,"sources":["../../src/builders/LayoutsBuilder.ts","../../src/builders/LayoutBuilder.ts","../../src/builders/RowBuilder.ts","../../src/builders/ColumnBuilder.ts","../../src/builders/FieldBuilder.ts","../../src/components/helper.ts","../../src/components/Row.tsx","../../src/components/Layout.tsx","../../src/components/Form.tsx","../../src/hooks/useForm.ts","../../src/actionTypes.ts","../../src/hooks/useFormField.ts","examples/Basic.tsx","App.js","index.js"],"names":["constructor","layouts","layoutsArr","layoutIdToArrIndex","this","Map","layout","concat","length","layoutIndex","get","slice","idGenerator","id","makeIdGenerator","rows","isHidden","additional","row","columns","column","Null","field","FieldComponent","componentProps","fieldId","getUnitId","unit","makeGetter","fieldIds","getFieldIds","lookFor","item","createSelector","_property","items","res","getSelectorsAndUnits","unitList","unitId","valuesGetter","fieldsGetter","errorsGetter","selectors","units","makeMetaSelector","prevSelectors","prevUnits","changedUnitList","unChangedUnitList","addedUnitList","unChangedUnitIds","_pick","DefaultRow","children","className","Row","unitKey","componentOverrides","getMetaSelector","useRef","columnToGetters","useMemo","fields","value","values","error","errors","onAction","Root","s","col","colId","key","DefaultLayout","React","Layout","rowToGetters","rowId","DefaultRoot","onSubmit","Form","handleSubmission","useCallback","e","layoutToGetters","reduceFormChangeAction","state","action","reducer","payload","loading","submitCount","touched","EMPTY_OBJ","useFormField","fieldIdRef","onActionRef","onChange","type","onBlur","current","el","TextInput","label","ref","onValueChange","target","htmlFor","placeholder","FIELDS","firstname","FieldBuilder","build","lastname","tagline","lifeMoto","address1","address2","pincode","LAYOUTS","LayoutsBuilder","addLayout","LayoutBuilder","addRow","RowBuilder","addColumn","ColumnBuilder","BasicForm","shoudlValidateOnBlur","useReducer","restState","fieldIdToEl","shouldValidateOnBlurRef","onSubmitRef","reduceChangesRef","validateRef","stateRef","validationPromise","scrollToError","errorFieldId","_keys","fieldElement","handleValidation","onErrorsFetch","errorsPromise","Promise","dispatch","handleSubmit","handleAction","reset","nextState","useEffect","touchedFieldIds","useForm","initialErrors","initialValues","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4eb4fbd6.chunk.js","sourcesContent":["import { LayoutInterface } from '../types';\n\nclass LayoutsBuilder {\n  layoutsArr: LayoutInterface[] = [];\n  layoutIdToArrIndex = new Map<string, number>();\n\n  constructor(layouts: LayoutInterface[] = []) {\n    this.layoutsArr = layouts;\n    this.layoutIdToArrIndex = new Map(layouts.map((layout, index) => [layout.id, index]));\n  }\n\n  addLayout(layout: LayoutInterface) {\n    this.layoutsArr = this.layoutsArr.concat([layout]);\n    this.layoutIdToArrIndex.set(layout.id, this.layoutsArr.length - 1);\n    return this;\n  }\n\n  removeLayout(layoutId: LayoutInterface['id']) {\n    const layoutIndex = this.layoutIdToArrIndex.get(layoutId);\n    if (layoutIndex == null) {\n      return this;\n    }\n    this.layoutsArr = [...this.layoutsArr.slice(0, layoutIndex), ...this.layoutsArr.slice(layoutIndex + 1)];\n    this.layoutIdToArrIndex.delete(layoutId);\n    return this;\n  }\n\n  updateLayout(layout: LayoutInterface) {\n    const layoutIndex = this.layoutIdToArrIndex.get(layout.id);\n    if (layoutIndex == null) {\n      return this;\n    }\n    this.layoutsArr = [...this.layoutsArr.slice(0, layoutIndex), layout, ...this.layoutsArr.slice(layoutIndex + 1)];\n    return this;\n  }\n\n  build(): LayoutInterface[] {\n    return this.layoutsArr;\n  }\n}\n\nexport { LayoutsBuilder };\n","import { RowInterface, LayoutInterface } from '../types';\n\nfunction makeIdGenerator() {\n  let id = 1;\n  return function generateId() {\n    return `${id++}`;\n  };\n}\n\nconst idGenerator = makeIdGenerator();\n\nclass LayoutBuilder {\n  rows: RowInterface[] = [];\n  id = idGenerator();\n  isHidden = false;\n  additional: any = undefined;\n\n  constructor(layout?: LayoutInterface) {\n    if (layout) {\n      this.rows = layout.rows;\n      this.id = layout.id;\n      this.isHidden = layout.isHidden;\n      this.additional = layout.additional;\n    }\n  }\n\n  markHidden() {\n    this.isHidden = true;\n    return this;\n  }\n\n  markVisible() {\n    this.isHidden = false;\n    return this;\n  }\n\n  setAdditional(additional: any) {\n    this.additional = additional;\n    return this;\n  }\n\n  addRow(row: RowInterface) {\n    this.rows = this.rows.concat([row]);\n    return this;\n  }\n\n  build(): LayoutInterface {\n    return {\n      rows: this.rows,\n      id: this.id,\n      isHidden: this.isHidden,\n      additional: this.additional,\n    };\n  }\n}\n\nexport { LayoutBuilder };\n","import { RowObjectInterface, ColumnInterface } from '../types';\n\nfunction makeIdGenerator() {\n  let id = 1;\n  return function generateId() {\n    return `${id++}`;\n  };\n}\n\nconst idGenerator = makeIdGenerator();\n\nclass RowBuilder {\n  columns: ColumnInterface[] = [];\n  id = idGenerator();\n  isHidden = false;\n  additional: any = undefined;\n\n  constructor(row?: RowObjectInterface) {\n    if (row) {\n      this.columns = row.columns;\n      this.id = row.id;\n      this.isHidden = row.isHidden;\n      this.additional = row.additional;\n    }\n    return this;\n  }\n\n  markHidden() {\n    this.isHidden = true;\n    return this;\n  }\n\n  markVisible() {\n    this.isHidden = false;\n    return this;\n  }\n\n  setAdditional(additional: any) {\n    this.additional = additional;\n    return this;\n  }\n\n  addColumn(column: ColumnInterface) {\n    this.columns = this.columns.concat([column]);\n    return this;\n  }\n\n  build(): RowObjectInterface {\n    return {\n      id: this.id,\n      columns: this.columns,\n      isHidden: this.isHidden,\n      additional: this.additional,\n    };\n  }\n}\n\nexport { RowBuilder };\n","import { ColumnObjectInterface, RowInterface } from '../types';\n\nfunction makeIdGenerator() {\n  let id = 1;\n  return function generateId() {\n    return `${id++}`;\n  };\n}\n\nconst idGenerator = makeIdGenerator();\n\nclass ColumnBuilder {\n  rows: RowInterface[] = [];\n  id = idGenerator();\n  isHidden = false;\n  additional: any = undefined;\n\n  constructor(column?: ColumnObjectInterface) {\n    if (column) {\n      this.rows = column.rows;\n      this.id = column.id;\n      this.isHidden = column.isHidden;\n      this.additional = column.additional;\n    }\n    return this;\n  }\n\n  markHidden() {\n    this.isHidden = true;\n    return this;\n  }\n\n  markVisible() {\n    this.isHidden = false;\n    return this;\n  }\n\n  setAdditional(additional: any) {\n    this.additional = additional;\n    return this;\n  }\n\n  addRow(row: RowInterface) {\n    this.rows = this.rows.concat([row]);\n    return this;\n  }\n\n  build(): ColumnObjectInterface {\n    return {\n      id: this.id,\n      rows: this.rows,\n      isHidden: this.isHidden,\n      additional: this.additional,\n    };\n  }\n}\n\nexport { ColumnBuilder };\n","import { FieldComponentProps } from '../types';\n\nfunction Null() {\n  return null;\n}\n\nclass FieldBuilder<V, F, P extends FieldComponentProps<V, F>> {\n  FieldComponent: React.ComponentType<P> = Null;\n  componentProps: Omit<P, 'value' | 'onAction' | 'fieldId'> = {} as P;\n  fieldId: F;\n  isHidden: boolean = false;\n\n  constructor(field?: {\n    FieldComponent: React.ComponentType<P>;\n    componentProps: Omit<P, 'value' | 'onAction' | 'fieldId'>;\n    isHidden: boolean;\n    fieldId: F;\n  }) {\n    if (field) {\n      this.FieldComponent = field.FieldComponent;\n      this.componentProps = field.componentProps;\n      this.isHidden = field.isHidden;\n      this.fieldId = field.fieldId;\n    }\n  }\n\n  setFieldComponent(Component: React.ComponentType<P & { value: V }>) {\n    this.FieldComponent = Component;\n  }\n\n  setComponentProps(componentProps: Omit<P, 'value' | 'onAction' | 'fieldId'>) {\n    this.componentProps = componentProps;\n  }\n\n  build(): {\n    FieldComponent: React.ComponentType<P>;\n    componentProps: Omit<P, 'value' | 'onAction' | 'fieldId'>;\n    isHidden: boolean;\n    fieldId: F;\n  } {\n    return {\n      FieldComponent: this.FieldComponent,\n      componentProps: this.componentProps,\n      isHidden: this.isHidden,\n      fieldId: this.fieldId,\n    };\n  }\n}\n\nexport { FieldBuilder };\n","import { createSelector } from 'reselect';\nimport _property from 'lodash/property';\nimport _pick from 'lodash/pick';\n\nimport { Fields, Values, Errors } from '../types';\n\ninterface UnitItem {\n  id: string;\n}\n\ntype UnitInterface = string | UnitItem;\n\nfunction getUnitId(unit: UnitInterface) {\n  return typeof unit === 'string' ? unit : unit.id;\n}\n\nexport function getFieldIds<U extends UnitInterface>(unit: U, lookFor: 'columns' | 'rows' = 'rows'): string[] {\n  if (typeof unit === 'string') {\n    return [unit];\n  }\n  return unit[lookFor].flatMap((item: UnitInterface) =>\n    typeof item === 'string' ? item : getFieldIds(item, lookFor === 'rows' ? 'columns' : 'rows')\n  );\n}\n\nfunction makeGetter<U extends UnitInterface>(unit: U, lookFor: 'columns' | 'rows') {\n  const fieldIds = getFieldIds(unit, lookFor);\n  return createSelector(\n    fieldIds.map((fieldId: string) => _property<Dict<U>, U>(fieldId)),\n    (...items) => {\n      return items.reduce((res, item, index) => {\n        res[fieldIds[index]] = item;\n        return res;\n      }, {});\n    }\n  );\n}\n\nfunction getSelectorsAndUnits<T extends UnitInterface>(unitList: T[], lookFor: 'columns' | 'rows') {\n  return unitList.reduce(\n    (res, unit) => {\n      const unitId = getUnitId(unit);\n      res.selectors[unitId] = {\n        valuesGetter: makeGetter(unit, lookFor),\n        fieldsGetter: makeGetter(unit, lookFor),\n        errorsGetter: makeGetter(unit, lookFor),\n      };\n      res.units[unitId] = unit;\n      return res;\n    },\n    { selectors: {}, units: {} }\n  );\n}\n\ninterface Dict<T> {\n  [k: string]: T;\n}\n\ninterface Getter<T> {\n  (dict: T): T;\n}\n\ninterface Selectors {\n  valuesGetter: Getter<Values>;\n  fieldsGetter: Getter<Fields>;\n  errorsGetter: Getter<Errors>;\n}\n\nexport const makeMetaSelector = (lookFor: 'columns' | 'rows') => {\n  let prevSelectors: Dict<Selectors> = {};\n  let prevUnits: Dict<unknown> = {};\n  return function getMetaSelectors<T extends UnitInterface>(unitList: T[]) {\n    if (prevUnits == null) {\n      const { selectors, units } = getSelectorsAndUnits(unitList, lookFor);\n      prevSelectors = selectors;\n      prevUnits = units;\n      return prevSelectors;\n    }\n\n    const changedUnitList = unitList.filter(\n      (unit) => prevUnits[getUnitId(unit)] && prevUnits[getUnitId(unit)] !== unit\n    );\n    const unChangedUnitList = unitList.filter(\n      (unit) => prevUnits[getUnitId(unit)] && prevUnits[getUnitId(unit)] === unit\n    );\n    const addedUnitList = unitList.filter((unit) => !prevUnits[getUnitId(unit)]);\n    const { selectors, units } = getSelectorsAndUnits([...changedUnitList, ...addedUnitList], lookFor);\n    const unChangedUnitIds = unChangedUnitList.map((unit) => getUnitId(unit));\n    prevSelectors = {\n      ..._pick(prevSelectors, unChangedUnitIds),\n      ...selectors,\n    };\n    prevUnits = {\n      ..._pick(prevUnits, unChangedUnitIds),\n      ...units,\n    };\n\n    return prevSelectors;\n  };\n};\n","import React, { useRef, useMemo } from 'react';\nimport { makeMetaSelector } from './helper';\n\nimport { RowInterface, ColumnInterface, Values, Errors, Fields, OnActionInterface } from '../types';\n\nimport s from '../styles.module.css';\n\nexport interface RowProps {\n  values: Values;\n  errors: Errors;\n  fields: Fields;\n  row: RowInterface | ColumnInterface;\n  onAction: OnActionInterface<any, string>;\n  className?: string;\n  unitKey?: 'columns' | 'rows';\n  componentOverrides?: {\n    Root?: any;\n    Layout?: any;\n    Row?: any;\n  };\n}\n\nconst DefaultRow = ({ className, children }) => <div className={className}>{children}</div>;\n\nconst Row = ({\n  values,\n  errors,\n  fields,\n  row,\n  onAction,\n  className = '',\n  unitKey = 'columns',\n  componentOverrides,\n}: RowProps) => {\n  const getMetaSelector = useRef(makeMetaSelector(unitKey === 'columns' ? 'rows' : 'columns'));\n  const unit = row[unitKey];\n  const columnToGetters = useMemo(() => {\n    return unit == null ? {} : getMetaSelector.current(unit);\n  }, [unit]);\n\n  if (typeof row === 'string') {\n    if (fields[row].isHidden) {\n      return null;\n    }\n\n    const field = fields[row];\n    const value = values[row];\n    const error = errors[row];\n    const { FieldComponent, componentProps, fieldId } = field;\n\n    return (\n      <FieldComponent\n        {...componentProps}\n        onAction={onAction}\n        className={className}\n        value={value}\n        error={error}\n        fieldId={fieldId}\n      />\n    );\n  }\n\n  const Root = componentOverrides?.Row || DefaultRow;\n\n  return (\n    <Root\n      className={`${s.flex} ${unitKey === 'columns' ? s.flexRow : s.flexCol} ${className || ''}`}\n      unitKey={unitKey}\n      values={values}\n      errors={errors}\n      fields={fields}\n      onAction={onAction}\n      row={row}\n    >\n      {unit.map((col: ColumnInterface | RowInterface) => {\n        const colId = typeof col === 'string' ? col : col.id;\n        return (\n          <Row\n            key={colId}\n            row={col}\n            values={columnToGetters[colId].valuesGetter(values)}\n            errors={columnToGetters[colId].errorsGetter(errors)}\n            fields={columnToGetters[colId].fieldsGetter(fields)}\n            unitKey={unitKey === 'rows' ? 'columns' : 'rows'}\n            onAction={onAction}\n            className={s.flex1}\n            componentOverrides={componentOverrides}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nexport { Row };\n","import React, { useMemo, useRef } from 'react';\n\nimport { Row } from './Row';\nimport { makeMetaSelector } from './helper';\n\nimport { RowInterface, Values, Errors, Fields, LayoutInterface, OnActionInterface } from '../types';\n\nexport interface LayoutProps {\n  values: Values;\n  errors: Errors;\n  fields: Fields;\n  layout: LayoutInterface;\n  onAction: OnActionInterface<any, string>;\n  componentOverrides?: {\n    Root?: any;\n    Layout?: any;\n    Row?: any;\n  };\n}\n\nconst DefaultLayout = ({ children }) => <React.Fragment>{children}</React.Fragment>;\n\nconst Layout = ({ values, errors, fields, layout, onAction, componentOverrides }: LayoutProps) => {\n  const getMetaSelector = useRef(makeMetaSelector('columns'));\n  const rowToGetters = useMemo(() => {\n    return getMetaSelector.current(layout.rows);\n  }, [layout.rows]);\n\n  const Root = componentOverrides?.Layout || DefaultLayout;\n\n  return (\n    <Root values={values} errors={errors} fields={fields} layout={layout} onAction={onAction}>\n      {layout.rows.map((row: RowInterface) => {\n        const rowId = typeof row === 'string' ? row : row.id;\n        return (\n          <Row\n            key={rowId}\n            row={row}\n            fields={rowToGetters[rowId].fieldsGetter(fields)}\n            values={rowToGetters[rowId].valuesGetter(values)}\n            errors={rowToGetters[rowId].errorsGetter(errors)}\n            onAction={onAction}\n            componentOverrides={componentOverrides}\n          />\n        );\n      })}\n    </Root>\n  );\n};\n\nexport { Layout };\n","import React, { useCallback, useMemo, useRef } from 'react';\n\nimport { Layout } from './Layout';\nimport { makeMetaSelector } from './helper';\n\nimport { Errors, Fields, LayoutInterface, OnActionInterface, Values } from '../types';\n\nexport interface FormProps {\n  values: Values;\n  errors: Errors;\n  fields: Fields;\n  layouts: LayoutInterface[];\n  onAction: OnActionInterface<any, string>;\n  componentOverrides?: {\n    Root?: any;\n    Layout?: any;\n    Row?: any;\n  };\n}\n\nconst DefaultRoot = ({ onSubmit, children }) => <form onSubmit={onSubmit}>{children}</form>;\n\nconst Form = ({ values, errors, fields, layouts, onAction, componentOverrides }: FormProps) => {\n  const handleSubmission = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n\n  const getMetaSelector = useRef(makeMetaSelector('rows'));\n  const layoutToGetters = useMemo(() => {\n    return getMetaSelector.current(layouts);\n  }, [layouts]);\n\n  const Root = componentOverrides?.Root || DefaultRoot;\n\n  return (\n    <Root onSubmit={handleSubmission}>\n      {layouts.map((layout) => (\n        <Layout\n          key={layout.id}\n          layout={layout}\n          fields={layoutToGetters[layout.id].fieldsGetter(fields)}\n          values={layoutToGetters[layout.id].valuesGetter(values)}\n          errors={layoutToGetters[layout.id].errorsGetter(errors)}\n          onAction={onAction}\n          componentOverrides={componentOverrides}\n        />\n      ))}\n    </Root>\n  );\n};\n\nexport { Form };\n","import { useCallback, useReducer, useRef, useEffect } from 'react';\nimport _keys from 'lodash/keys';\nimport _pick from 'lodash/pick';\n\nimport { FORM_CHANGE_ACTION, REGISTER_FORM_FIELD_ACTION, MARK_FORM_FIELD_TOUCHED_ACTION } from '../actionTypes';\n\nfunction reduceFormChangeAction(state, action) {\n  return {\n    ...state,\n    values: {\n      ...state.values,\n      [action.payload.fieldId]: action.payload.value,\n    },\n  };\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case FORM_CHANGE_ACTION:\n      return reduceFormChangeAction(state, action);\n    case 'RESET': {\n      return { ...state, ...action.payload };\n    }\n    case 'SET_LOADING': {\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    }\n    case 'SUBMIT': {\n      return {\n        ...state,\n        loading: false,\n        errors: action.payload.errors,\n        submitCount: state.submitCount + 1,\n      };\n    }\n    case 'UPDATE_ERRORS': {\n      return {\n        ...state,\n        errors: action.payload,\n      };\n    }\n    case MARK_FORM_FIELD_TOUCHED_ACTION: {\n      return {\n        ...state,\n        touched: {\n          ...state.touched,\n          [action.payload.fieldId]: true,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nconst EMPTY_OBJ = {};\n\nconst useForm = ({\n  initialValues,\n  initialErrors,\n  initialLayouts,\n  initialFields,\n  onSubmit,\n  onAction,\n  validate,\n  reduceChanges,\n  shouldScrollToErrors,\n  shoudlValidateOnBlur,\n}) => {\n  const [state, dispatch] = useReducer(reducer, {\n    values: initialValues,\n    errors: initialErrors,\n    layouts: initialLayouts,\n    fields: initialFields,\n    touched: {},\n    submitCount: 0,\n  });\n  const { submitCount, ...restState } = state;\n  const fieldIdToEl = useRef({});\n  const shouldValidateOnBlurRef = useRef(shoudlValidateOnBlur);\n  const onSubmitRef = useRef(onSubmit);\n  const onActionRef = useRef(onAction);\n  const reduceChangesRef = useRef(reduceChanges);\n  const validateRef = useRef(validate);\n  const stateRef = useRef(state);\n  shouldValidateOnBlurRef.current = shoudlValidateOnBlur;\n  onSubmitRef.current = onSubmit;\n  onActionRef.current = onAction;\n  reduceChangesRef.current = reduceChanges;\n  stateRef.current = state;\n  validateRef.current = validate;\n\n  const validationPromise = useRef<(Promise<any> & { ignore?: boolean }) | null>(null);\n\n  const scrollToError = useCallback((errors = stateRef.current.errors) => {\n    const errorFieldId = _keys(errors)[0];\n    const fieldElement = fieldIdToEl.current[errorFieldId];\n    if (fieldElement && fieldElement.scrollIntoView) {\n      fieldElement.scrollIntoView();\n    }\n  }, []);\n\n  const handleValidation = useCallback((onErrorsFetch) => {\n    if (validationPromise.current) {\n      validationPromise.current.ignore = true;\n    }\n    const errorsPromise = (Promise.resolve(validateRef.current(stateRef.current)) as unknown) as Promise<any> & {\n      ignore?: boolean;\n    };\n    validationPromise.current = errorsPromise;\n    dispatch({ type: 'SET_LOADING', payload: true });\n    errorsPromise\n      .then((errors) => {\n        if (errorsPromise.ignore) {\n          return;\n        }\n        onErrorsFetch(errors);\n      })\n      .catch(() => {\n        if (errorsPromise.ignore) {\n          return;\n        }\n        dispatch({ type: 'SET_LOADING', payload: false });\n      });\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    if (validateRef.current) {\n      handleValidation((errors) => {\n        if (errors) {\n          dispatch({ type: 'SUBMIT', payload: { errors } });\n          if (shouldScrollToErrors) {\n            scrollToError(errors);\n          }\n        } else {\n          dispatch({ type: 'SUBMIT', payload: { errors: {} } });\n          onSubmit(restState);\n        }\n      });\n    }\n  }, []);\n  const handleAction = useCallback((action) => {\n    switch (action.type) {\n      case FORM_CHANGE_ACTION: {\n        if (reduceChanges) {\n          dispatch({\n            type: 'RESET',\n            payload: reduceChangesRef.current(\n              stateRef.current,\n              reduceFormChangeAction(stateRef.current, action),\n              action\n            ),\n          });\n        } else {\n          dispatch(action);\n        }\n        break;\n      }\n      case MARK_FORM_FIELD_TOUCHED_ACTION: {\n        dispatch(action);\n        break;\n      }\n      case REGISTER_FORM_FIELD_ACTION: {\n        fieldIdToEl.current[action.payload.fieldId] = action.payload.el;\n        break;\n      }\n      default: {\n        return onActionRef.current(action);\n      }\n    }\n  }, []);\n  const reset = useCallback((nextState) => {\n    dispatch({\n      type: 'RESET',\n      payload: nextState,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (validateRef.current) {\n      const touchedFieldIds = _keys(stateRef.current.touched);\n      if (submitCount || (touchedFieldIds.length && shouldValidateOnBlurRef.current)) {\n        handleValidation((errors) => {\n          dispatch({\n            type: 'UPDATE_ERRORS',\n            payload: submitCount ? errors || EMPTY_OBJ : _pick(errors, touchedFieldIds),\n          });\n        });\n      }\n    }\n  }, [restState.values, restState.touched, submitCount]);\n\n  return { ...restState, handleSubmit, handleAction, scrollToError, reset };\n};\n\nexport { useForm };\n","export const FORM_CHANGE_ACTION = '@@form/change';\nexport const REGISTER_FORM_FIELD_ACTION = '@@form/register-field';\nexport const MARK_FORM_FIELD_TOUCHED_ACTION = '@@form/touch-field';\n","import { useCallback, useRef } from 'react';\nimport { FORM_CHANGE_ACTION, MARK_FORM_FIELD_TOUCHED_ACTION, REGISTER_FORM_FIELD_ACTION } from '../actionTypes';\n\nconst useFormField = (fieldId, onAction) => {\n  const fieldIdRef = useRef(fieldId);\n  const onActionRef = useRef(onAction);\n  fieldIdRef.current = fieldId;\n  onActionRef.current = onAction;\n\n  const onChange = useCallback((value) => {\n    onActionRef.current({\n      type: FORM_CHANGE_ACTION,\n      payload: { fieldId: fieldIdRef.current, value },\n    });\n  }, []);\n\n  const onBlur = useCallback(() => {\n    onActionRef.current({\n      type: MARK_FORM_FIELD_TOUCHED_ACTION,\n      payload: { fieldId: fieldIdRef.current },\n    });\n  }, []);\n\n  const ref = useCallback((el) => {\n    onActionRef.current({\n      type: REGISTER_FORM_FIELD_ACTION,\n      payload: { fieldId: fieldIdRef.current, el },\n    });\n  }, []);\n\n  return [ref, onBlur, onChange];\n};\n\nexport { useFormField };\n","import React, { useCallback } from 'react';\n\nimport {\n  LayoutsBuilder,\n  LayoutBuilder,\n  RowBuilder,\n  ColumnBuilder,\n  FieldBuilder,\n  OnActionInterface,\n  Fields,\n  LayoutInterface,\n  Form,\n  useForm,\n  useFormField,\n} from 'react-entity-form';\n\ninterface TextInputProps<F> {\n  value: string;\n  onAction: OnActionInterface<string, F>;\n\n  fieldId: F;\n  label: string;\n  className: string;\n}\n\nconst TextInput = <F extends string>({ value = '', onAction, className, fieldId, label }: TextInputProps<F>) => {\n  const [ref, onBlur, onValueChange] = useFormField(fieldId, onAction);\n  const onChange = useCallback(\n    (e) => {\n      onValueChange(e.target.value);\n    },\n    [onValueChange]\n  );\n\n  return (\n    <div className={`${className || ''} flex flex-col`} ref={ref}>\n      <label className=\"block flex-none\" htmlFor={fieldId}>\n        {label}\n      </label>\n      <input\n        onBlur={onBlur}\n        id={fieldId}\n        placeholder={label}\n        className=\"w-full block flex-1\"\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n};\n\ninterface TextAreaInputProps<F> {\n  value: string;\n  onAction: OnActionInterface<string, F>;\n\n  fieldId: F;\n  label: string;\n  className: string;\n}\n\nfunction TextAreaInput<F extends string>({\n  value = '',\n  onAction,\n  className,\n  fieldId,\n  label,\n}: TextAreaInputProps<F>): React.ReactElement {\n  const [ref, onBlur, onValueChange] = useFormField(fieldId, onAction);\n  const onChange = useCallback(\n    (e) => {\n      onValueChange(e.target.value);\n    },\n    [onValueChange]\n  );\n\n  return (\n    <div ref={ref} className={`${className || ''} flex flex-col`}>\n      <label className=\"block flex-none\" htmlFor={fieldId}>\n        {label}\n      </label>\n      <textarea\n        onBlur={onBlur}\n        id={fieldId}\n        placeholder={label}\n        className=\"w-full block flex-1\"\n        value={value}\n        onChange={onChange}\n        rows={3}\n      />\n    </div>\n  );\n}\n\nconst FIELDS: Fields = {\n  firstname: new FieldBuilder<string, 'firstname', TextInputProps<'firstname'>>({\n    fieldId: 'firstname' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'First name' },\n    FieldComponent: TextInput,\n  }).build(),\n  lastname: new FieldBuilder<string, 'lastname', TextInputProps<'lastname'>>({\n    fieldId: 'lastname' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'Last Name' },\n    FieldComponent: TextInput,\n  }).build(),\n  tagline: new FieldBuilder<string, 'tagline', TextInputProps<'tagline'>>({\n    fieldId: 'tagline' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'Tagline' },\n    FieldComponent: TextInput,\n  }).build(),\n  lifeMoto: new FieldBuilder<string, 'lifeMoto', TextAreaInputProps<'lifeMoto'>>({\n    fieldId: 'lifeMoto' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'Life Moto' },\n    FieldComponent: TextAreaInput,\n  }).build(),\n  address1: new FieldBuilder<string, 'address1', TextInputProps<'address1'>>({\n    fieldId: 'address1' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'Address line 1' },\n    FieldComponent: TextInput,\n  }).build(),\n  address2: new FieldBuilder<string, 'address2', TextInputProps<'address2'>>({\n    fieldId: 'address2' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'Address line 2' },\n    FieldComponent: TextInput,\n  }).build(),\n  pincode: new FieldBuilder<string, 'pincode', TextInputProps<'pincode'>>({\n    fieldId: 'pincode' as const,\n    isHidden: false,\n    componentProps: { className: '', label: 'Pincode' },\n    FieldComponent: TextInput,\n  }).build(),\n} as const;\n\nconst LAYOUTS: LayoutInterface[] = new LayoutsBuilder()\n  .addLayout(\n    new LayoutBuilder()\n      .addRow(\n        new RowBuilder()\n          .addColumn('firstname' as const)\n          .addColumn('lastname' as const)\n          .build()\n      )\n      .addRow('tagline' as const)\n      .addRow(\n        new RowBuilder()\n          .addColumn('lifeMoto' as const)\n          .addColumn(\n            new ColumnBuilder()\n              .addRow('address1' as const)\n              .addRow('address2' as const)\n              .addRow('pincode' as const)\n              .build()\n          )\n          .build()\n      )\n      .build()\n  )\n  .build();\n\nconst BasicForm = () => {\n  // @ts-ignore\n  const { handleAction, errors, values, touched } = useForm({\n    initialErrors: {},\n    initialValues: {},\n  });\n\n  return <Form fields={FIELDS} layouts={LAYOUTS} values={values} errors={errors} onAction={handleAction} />;\n};\n\nexport { BasicForm };\n","import React from 'react';\n\nimport { BasicForm } from './examples/Basic';\nimport 'react-entity-form/dist/index.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <h1>Hello React Entity Form</h1>\n      <BasicForm />\n    </div>\n  );\n};\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}